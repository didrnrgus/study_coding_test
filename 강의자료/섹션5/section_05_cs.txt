✅ 1. 두 배열 합치기

using System;
using System.Collections.Generic;

class Program
{
    static List<int> Solution(List<int> arr1, List<int> arr2)
    {
        List<int> answer = new List<int>();
        int p1 = 0, p2 = 0;

        while (p1 < arr1.Count && p2 < arr2.Count)
        {
            if (arr1[p1] <= arr2[p2])
                answer.Add(arr1[p1++]);
            else
                answer.Add(arr2[p2++]);
        }

        while (p1 < arr1.Count) answer.Add(arr1[p1++]);
        while (p2 < arr2.Count) answer.Add(arr2[p2++]);

        return answer;
    }

    static void Main()
    {
        List<int> a = new List<int> { 1, 3, 5 };
        List<int> b = new List<int> { 2, 3, 6, 7, 9 };
        var result = Solution(a, b);
        Console.WriteLine(string.Join(" ", result));
    }
}





✅ 2. 공통원소 구하기

using System;
using System.Collections.Generic;

class Program
{
    static List<int> Solution(List<int> arr1, List<int> arr2)
    {
        List<int> answer = new List<int>();
        arr1.Sort();
        arr2.Sort();
        int p1 = 0, p2 = 0;

        while (p1 < arr1.Count && p2 < arr2.Count)
        {
            if (arr1[p1] == arr2[p2])
            {
                answer.Add(arr1[p1]);
                p1++; p2++;
            }
            else if (arr1[p1] < arr2[p2]) p1++;
            else p2++;
        }

        return answer;
    }

    static void Main()
    {
        var a = new List<int> { 1, 3, 9, 5, 2 };
        var b = new List<int> { 3, 2, 5, 7, 8 };
        var result = Solution(a, b);
        Console.WriteLine(string.Join(" ", result));
    }
}





✅ 3. 연속부분수열1

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(int m, List<int> arr)
    {
        int answer = 0, sum = 0, lt = 0;

        for (int rt = 0; rt < arr.Count; rt++)
        {
            sum += arr[rt];
            if (sum == m) answer++;

            while (sum >= m)
            {
                sum -= arr[lt++];
                if (sum == m) answer++;
            }
        }

        return answer;
    }

    static void Main()
    {
        var a = new List<int> { 1, 2, 1, 3, 1, 1, 1, 2 };
        int m = 6;
        Console.WriteLine(Solution(m, a));
    }
}





✅ 4. 연속부분수열2

/*
    합이 5이하가 되는 연속부분수열은 {1}, {3}, {1}, {2}, {3}, {1, 3}, {3, 1}, {1, 2}, {2, 3}, 
    {1, 3, 1}로 총 10가지입니다

    노가다로 해봐
    1
    1 3 -> (3)
    1 3 1 -> (3 1) (1)
    1 3 1 2 x
      3 1 2 x
        1 2 -> (2)
        1 2 3 x
          2 3 -> (3)
    합이 5 이하 총 10개
*/
using System;
using System.Collections.Generic;

class Program
{
    static int Solution(int m, List<int> arr)
    {
        int answer = 0, sum = 0, lt = 0;

        for (int rt = 0; rt < arr.Count; rt++)
        {
            sum += arr[rt];
            while (sum > m)
                sum -= arr[lt++];

            answer += (rt - lt + 1);
        }

        return answer;
    }

    static void Main()
    {
        var a = new List<int> { 1, 3, 1, 2, 3 };
        int m = 5;
        Console.WriteLine(Solution(m, a));
    }
}





✅ 5. 최대 매출

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(int k, List<int> arr)
    {
        int sum = 0;
        for (int i = 0; i < k; i++) sum += arr[i];

        int answer = sum;

        for (int i = k; i < arr.Count; i++)
        {
            sum += arr[i] - arr[i - k];
            answer = Math.Max(answer, sum);
        }

        return answer;
    }

    static void Main()
    {
        var a = new List<int> { 12, 15, 11, 20, 25, 10, 20, 19, 13, 15 };
        int k = 3;
        Console.WriteLine(Solution(k, a));
    }
}





✅ 6. 학급 회장 (해쉬)

using System;
using System.Collections.Generic;

class Program
{
    static char Solution(string s)
    {
        var counter = new Dictionary<char, int>();

        foreach (char c in s)
        {
            if (!counter.ContainsKey(c)) counter[c] = 0;
            counter[c]++;
        }

        int max = 0;
        char answer = ' ';
        foreach (var kvp in counter)
        {
            if (kvp.Value > max)
            {
                max = kvp.Value;
                answer = kvp.Key;
            }
        }

        return answer;
    }

    static void Main()
    {
        string str = "BACBACCACCBDEDE";
        Console.WriteLine(Solution(str));
    }
}





✅ 7. 아나그램 판단

using System;
using System.Collections.Generic;

class Program
{
    static string Solution(string str1, string str2)
    {
        var counter = new Dictionary<char, int>();
        foreach (char c in str1)
        {
            if (!counter.ContainsKey(c)) counter[c] = 0;
            counter[c]++;
        }

        foreach (char c in str2)
        {
            if (!counter.ContainsKey(c) || counter[c] == 0)
                return "NO";
            counter[c]--;
        }

        return "YES";
    }

    static void Main()
    {
        string a = "AbaAeCe";
        string b = "baeeACA";
        Console.WriteLine(Solution(a, b));
    }
}





✅ 8. 모든 아나그램 찾기

using System;
using System.Collections.Generic;

class Program
{
    static bool CompareDict(Dictionary<char, int> d1, Dictionary<char, int> d2)
    {
        if (d1.Count != d2.Count) return false;
        foreach (var kvp in d1)
        {
            if (!d2.ContainsKey(kvp.Key) || d2[kvp.Key] != kvp.Value)
                return false;
        }
        return true;
    }

    static int Solution(string s, string t)
    {
        var tMap = new Dictionary<char, int>();
        var sMap = new Dictionary<char, int>();
        int len = t.Length;
        int answer = 0;

        foreach (char c in t)
        {
            if (!tMap.ContainsKey(c)) tMap[c] = 0;
            tMap[c]++;
        }

        for (int i = 0; i < len - 1; i++)
        {
            if (!sMap.ContainsKey(s[i])) sMap[s[i]] = 0;
            sMap[s[i]]++;
        }

        int lt = 0;
        for (int rt = len - 1; rt < s.Length; rt++)
        {
            if (!sMap.ContainsKey(s[rt])) sMap[s[rt]] = 0;
            sMap[s[rt]]++;

            if (CompareDict(sMap, tMap))
                answer++;

            sMap[s[lt]]--;
            if (sMap[s[lt]] == 0) sMap.Remove(s[lt]);
            lt++;
        }

        return answer;
    }

    static void Main()
    {
        string a = "bacaAacba";
        string b = "abc";
        Console.WriteLine(Solution(a, b));
    }
}
