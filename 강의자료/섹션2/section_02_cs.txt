✅ 1. 큰 수 출력하기

using System;
using System.Collections.Generic;

class Program
{
    static List<int> Solution(List<int> arr)
    {
        List<int> result = new List<int>();
        if (arr.Count > 0) result.Add(arr[0]);

        for (int i = 1; i < arr.Count; i++)
        {
            if (arr[i] > arr[i - 1])
                result.Add(arr[i]);
        }
        return result;
    }

    static void Main()
    {
        List<int> arr = new List<int> { 7, 3, 9, 5, 6, 12 };
        List<int> result = Solution(arr);
        Console.WriteLine(string.Join(" ", result));
    }
}





✅ 2. 보이는 학생

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(List<int> arr)
    {
        int count = 1;
        int max = arr[0];

        for (int i = 1; i < arr.Count; i++)
        {
            if (arr[i] > max)
            {
                max = arr[i];
                count++;
            }
        }

        return count;
    }

    static void Main()
    {
        List<int> arr = new List<int> { 130, 135, 148, 140, 145, 150, 150, 153 };
        Console.WriteLine(Solution(arr));
    }
}





✅ 3. 가위바위보

using System;
using System.Collections.Generic;

class Program
{
    static List<char> Solution(List<int> a, List<int> b)
    {
        List<char> result = new List<char>();

        for (int i = 0; i < a.Count; i++)
        {
            if (a[i] == b[i]) result.Add('D');
            else if ((a[i] == 1 && b[i] == 3) ||
                     (a[i] == 2 && b[i] == 1) ||
                     (a[i] == 3 && b[i] == 2))
                result.Add('A');
            else
                result.Add('B');
        }

        return result;
    }

    static void Main()
    {
        List<int> a = new List<int> { 2, 3, 3, 1, 3 };
        List<int> b = new List<int> { 1, 1, 2, 2, 3 };
        List<char> result = Solution(a, b);
        foreach (var r in result)
        {
            Console.WriteLine(r);
        }
    }
}





✅ 4. 점수 계산

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(List<int> arr)
    {
        int result = 0, combo = 0;

        foreach (var a in arr)
        {
            if (a == 1)
            {
                combo++;
                result += combo;
            }
            else
            {
                combo = 0;
            }
        }

        return result;
    }

    static void Main()
    {
        List<int> arr = new List<int> { 1, 0, 1, 1, 1, 0, 0, 1, 1, 0 };
        Console.WriteLine(Solution(arr));
    }
}





✅ 5. 등수 구하기

/*
 처음엔, 각 인덱스 내가 1등 인줄 ..
 하지만 내 자신과 인덱스 0~n 까지 (자기자신비교 x -> 스킵)
*/
using System;
using System.Collections.Generic;

class Program
{
    static List<int> Solution(List<int> arr)
    {
        List<int> result = new List<int>();

        for (int i = 0; i < arr.Count; i++)
        {
            int rank = 1;
            for (int j = 0; j < arr.Count; j++)
            {
                if (arr[j] > arr[i]) rank++;
            }
            result.Add(rank);
        }

        return result;
    }

    static void Main()
    {
        List<int> arr = new List<int> { 87, 89, 92, 100, 76 };
        List<int> result = Solution(arr);
        Console.WriteLine(string.Join(" ", result));
    }
}





✅ 6. 격자판 최대합

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(List<List<int>> arr)
    {
        int n = arr.Count;
        int result = int.MinValue;

        for (int i = 0; i < n; i++)
        {
            int rowSum = 0, colSum = 0;
            for (int j = 0; j < n; j++)
            {
                rowSum += arr[i][j];
                colSum += arr[j][i];
            }
            result = Math.Max(result, Math.Max(rowSum, colSum));
        }

        int diag1 = 0, diag2 = 0;
        for (int i = 0; i < n; i++)
        {
            diag1 += arr[i][i];
            diag2 += arr[i][n - i - 1];
        }

        result = Math.Max(result, Math.Max(diag1, diag2));
        return result;
    }

    static void Main()
    {
        var arr = new List<List<int>>
        {
            new List<int> {10, 13, 10, 12, 15},
            new List<int> {12, 39, 30, 23, 11},
            new List<int> {11, 25, 50, 53, 15},
            new List<int> {19, 27, 29, 37, 27},
            new List<int> {19, 13, 30, 13, 19}
        };

        Console.WriteLine(Solution(arr));
    }
}





✅ 7. 봉우리

using System;
using System.Collections.Generic;

class Program
{
    static int Solution(List<List<int>> arr)
    {
        int n = arr.Count;
        int[] dx = { -1, 0, 1, 0 };
        int[] dy = { 0, 1, 0, -1 };
        int count = 0;

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                bool isPeak = true;
                for (int k = 0; k < 4; k++)
                {
                    int nx = i + dx[k];
                    int ny = j + dy[k];

                    if (nx >= 0 && nx < n && ny >= 0 && ny < n &&
                        arr[nx][ny] >= arr[i][j])
                    {
                        isPeak = false;
                        break;
                    }
                }
                if (isPeak) count++;
            }
        }

        return count;
    }

    static void Main()
    {
        var arr = new List<List<int>>
        {
            new List<int> {5, 3, 7, 2, 3},
            new List<int> {3, 7, 1, 6, 1},
            new List<int> {7, 2, 5, 3, 4},
            new List<int> {4, 3, 6, 4, 1},
            new List<int> {8, 7, 3, 5, 2}
        };

        Console.WriteLine(Solution(arr));
    }
}